allegro-hermes	D:\Desenvolvimento\Projetos Github\allegro-hermes\hermes-test-helper\src\main\java\pl\allegro\tech\hermes\test\helper\endpoint\MultiUrlEndpointAddressResolver.java	Sinalização de uma chamada de método que não pôde ter seu tipo resolvido.	ufrn.dimap.lets.ehmetrics.javaparserutil.JavaParserUtil	getThrownClassOrInterfaceTypes	154	
						ufrn.dimap.lets.ehmetrics.visitor.UnsupportedSignalerException: Sinalização de uma chamada de método que não pôde ter seu tipo resolvido.
							at ufrn.dimap.lets.ehmetrics.javaparserutil.JavaParserUtil.getThrownClassOrInterfaceTypes(JavaParserUtil.java:154)
							at ufrn.dimap.lets.ehmetrics.javaparserutil.JavaParserUtil.getThrownClassOrInterfaceTypes(JavaParserUtil.java:109)
							at ufrn.dimap.lets.ehmetrics.visitor.GuidelineCheckerVisitor.createSignaler(GuidelineCheckerVisitor.java:121)
							at ufrn.dimap.lets.ehmetrics.visitor.DefineSingleExceptionVisitor.visit(DefineSingleExceptionVisitor.java:48)
							at ufrn.dimap.lets.ehmetrics.visitor.DefineSingleExceptionVisitor.visit(DefineSingleExceptionVisitor.java:1)
							at com.github.javaparser.ast.stmt.ThrowStmt.accept(ThrowStmt.java:78)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109)
							at java.util.ArrayList.forEach(ArrayList.java:1249)
							at com.github.javaparser.ast.NodeList.forEach(NodeList.java:268)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109)
							at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:76)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:133)
							at ufrn.dimap.lets.ehmetrics.visitor.DefineSingleExceptionVisitor.visit(DefineSingleExceptionVisitor.java:42)
							at ufrn.dimap.lets.ehmetrics.visitor.DefineSingleExceptionVisitor.visit(DefineSingleExceptionVisitor.java:1)
							at com.github.javaparser.ast.stmt.CatchClause.accept(CatchClause.java:85)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$160(VoidVisitorAdapter.java:530)
							at java.util.ArrayList.forEach(ArrayList.java:1249)
							at com.github.javaparser.ast.NodeList.forEach(NodeList.java:268)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:530)
							at com.github.javaparser.ast.stmt.TryStmt.accept(TryStmt.java:141)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109)
							at java.util.ArrayList.forEach(ArrayList.java:1249)
							at com.github.javaparser.ast.NodeList.forEach(NodeList.java:268)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109)
							at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:76)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$104(VoidVisitorAdapter.java:369)
							at java.util.Optional.ifPresent(Optional.java:159)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:369)
							at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:108)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$31(VoidVisitorAdapter.java:154)
							at java.util.ArrayList.forEach(ArrayList.java:1249)
							at com.github.javaparser.ast.NodeList.forEach(NodeList.java:268)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:154)
							at ufrn.dimap.lets.ehmetrics.visitor.DefineSingleExceptionVisitor.visit(DefineSingleExceptionVisitor.java:33)
							at ufrn.dimap.lets.ehmetrics.visitor.DefineSingleExceptionVisitor.visit(DefineSingleExceptionVisitor.java:1)
							at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$43(VoidVisitorAdapter.java:175)
							at java.util.ArrayList.forEach(ArrayList.java:1249)
							at com.github.javaparser.ast.NodeList.forEach(NodeList.java:268)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:175)
							at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:130)
							at ufrn.dimap.lets.ehmetrics.analyzer.Analyzer.analyze(Analyzer.java:60)
							at ufrn.dimap.lets.ehmetrics.Main.executeCompleteAnalysis(Main.java:67)
							at ufrn.dimap.lets.ehmetrics.Main.main(Main.java:39)
allegro-hermes	D:\Desenvolvimento\Projetos Github\allegro-hermes\hermes-test-helper\src\main\java\pl\allegro\tech\hermes\test\helper\oauth\server\OAuthAccessTokenServlet.java	Sinalização de uma chamada de método que não pôde ter seu tipo resolvido.	ufrn.dimap.lets.ehmetrics.javaparserutil.JavaParserUtil	getThrownClassOrInterfaceTypes	154	
						ufrn.dimap.lets.ehmetrics.visitor.UnsupportedSignalerException: Sinalização de uma chamada de método que não pôde ter seu tipo resolvido.
							at ufrn.dimap.lets.ehmetrics.javaparserutil.JavaParserUtil.getThrownClassOrInterfaceTypes(JavaParserUtil.java:154)
							at ufrn.dimap.lets.ehmetrics.javaparserutil.JavaParserUtil.getThrownClassOrInterfaceTypes(JavaParserUtil.java:109)
							at ufrn.dimap.lets.ehmetrics.visitor.GuidelineCheckerVisitor.createSignaler(GuidelineCheckerVisitor.java:121)
							at ufrn.dimap.lets.ehmetrics.visitor.DefineSingleExceptionVisitor.visit(DefineSingleExceptionVisitor.java:48)
							at ufrn.dimap.lets.ehmetrics.visitor.DefineSingleExceptionVisitor.visit(DefineSingleExceptionVisitor.java:1)
							at com.github.javaparser.ast.stmt.ThrowStmt.accept(ThrowStmt.java:78)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109)
							at java.util.ArrayList.forEach(ArrayList.java:1249)
							at com.github.javaparser.ast.NodeList.forEach(NodeList.java:268)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109)
							at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:76)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:300)
							at com.github.javaparser.ast.stmt.IfStmt.accept(IfStmt.java:88)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109)
							at java.util.ArrayList.forEach(ArrayList.java:1249)
							at com.github.javaparser.ast.NodeList.forEach(NodeList.java:268)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109)
							at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:76)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$104(VoidVisitorAdapter.java:369)
							at java.util.Optional.ifPresent(Optional.java:159)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:369)
							at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:108)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$31(VoidVisitorAdapter.java:154)
							at java.util.ArrayList.forEach(ArrayList.java:1249)
							at com.github.javaparser.ast.NodeList.forEach(NodeList.java:268)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:154)
							at ufrn.dimap.lets.ehmetrics.visitor.DefineSingleExceptionVisitor.visit(DefineSingleExceptionVisitor.java:33)
							at ufrn.dimap.lets.ehmetrics.visitor.DefineSingleExceptionVisitor.visit(DefineSingleExceptionVisitor.java:1)
							at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$43(VoidVisitorAdapter.java:175)
							at java.util.ArrayList.forEach(ArrayList.java:1249)
							at com.github.javaparser.ast.NodeList.forEach(NodeList.java:268)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:175)
							at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:130)
							at ufrn.dimap.lets.ehmetrics.analyzer.Analyzer.analyze(Analyzer.java:60)
							at ufrn.dimap.lets.ehmetrics.Main.executeCompleteAnalysis(Main.java:67)
							at ufrn.dimap.lets.ehmetrics.Main.main(Main.java:39)
allegro-hermes	D:\Desenvolvimento\Projetos Github\allegro-hermes\hermes-test-helper\src\main\java\pl\allegro\tech\hermes\test\helper\oauth\server\OAuthResourceServlet.java	Sinalização de uma chamada de método que não pôde ter seu tipo resolvido.	ufrn.dimap.lets.ehmetrics.javaparserutil.JavaParserUtil	getThrownClassOrInterfaceTypes	154	
						ufrn.dimap.lets.ehmetrics.visitor.UnsupportedSignalerException: Sinalização de uma chamada de método que não pôde ter seu tipo resolvido.
							at ufrn.dimap.lets.ehmetrics.javaparserutil.JavaParserUtil.getThrownClassOrInterfaceTypes(JavaParserUtil.java:154)
							at ufrn.dimap.lets.ehmetrics.javaparserutil.JavaParserUtil.getThrownClassOrInterfaceTypes(JavaParserUtil.java:109)
							at ufrn.dimap.lets.ehmetrics.visitor.GuidelineCheckerVisitor.createSignaler(GuidelineCheckerVisitor.java:121)
							at ufrn.dimap.lets.ehmetrics.visitor.DefineSingleExceptionVisitor.visit(DefineSingleExceptionVisitor.java:48)
							at ufrn.dimap.lets.ehmetrics.visitor.DefineSingleExceptionVisitor.visit(DefineSingleExceptionVisitor.java:1)
							at com.github.javaparser.ast.stmt.ThrowStmt.accept(ThrowStmt.java:78)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109)
							at java.util.ArrayList.forEach(ArrayList.java:1249)
							at com.github.javaparser.ast.NodeList.forEach(NodeList.java:268)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109)
							at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:76)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:300)
							at com.github.javaparser.ast.stmt.IfStmt.accept(IfStmt.java:88)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109)
							at java.util.ArrayList.forEach(ArrayList.java:1249)
							at com.github.javaparser.ast.NodeList.forEach(NodeList.java:268)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109)
							at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:76)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$104(VoidVisitorAdapter.java:369)
							at java.util.Optional.ifPresent(Optional.java:159)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:369)
							at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:108)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$31(VoidVisitorAdapter.java:154)
							at java.util.ArrayList.forEach(ArrayList.java:1249)
							at com.github.javaparser.ast.NodeList.forEach(NodeList.java:268)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:154)
							at ufrn.dimap.lets.ehmetrics.visitor.DefineSingleExceptionVisitor.visit(DefineSingleExceptionVisitor.java:33)
							at ufrn.dimap.lets.ehmetrics.visitor.DefineSingleExceptionVisitor.visit(DefineSingleExceptionVisitor.java:1)
							at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$43(VoidVisitorAdapter.java:175)
							at java.util.ArrayList.forEach(ArrayList.java:1249)
							at com.github.javaparser.ast.NodeList.forEach(NodeList.java:268)
							at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:175)
							at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:130)
							at ufrn.dimap.lets.ehmetrics.analyzer.Analyzer.analyze(Analyzer.java:60)
							at ufrn.dimap.lets.ehmetrics.Main.executeCompleteAnalysis(Main.java:67)
							at ufrn.dimap.lets.ehmetrics.Main.main(Main.java:39)
